[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pcobra"
version = "10.0.10"
description = "Un lenguaje de programación en español para simulaciones y más."
authors = [ {name = "Adolfo González Hernández", email = "adolfogonzal@gmail.com"} ]
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
keywords = ["cobra", "lenguaje", "cli"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "numpy==2.3.2",
    "scipy==1.16.1",
    "matplotlib==3.10.5",
    "pandas==2.3.1",
    "agix==1.3.0",
    "chardet==5.2.0",
    "holobit-sdk==1.0.8; python_version >= '3.10'",
    "smooth-criminal==0.4.0",
    "tomli==2.2.1",
    "PyYAML==6.0.2",
    "jsonschema==4.25.1",
    "python-dotenv==1.1.1",
    "pexpect==4.9.0",
    "requests==2.32.5",
    "flet==0.28.3",
    "packaging==25.0",
    "pybind11==3.0.1",
    "tree-sitter==0.25.1",
    "RestrictedPython==8.0",
    "prompt_toolkit==3.0.51",
    "Pygments==2.19.2",
    "argcomplete==3.6.2",
    "httpx==0.28.1",
    "lark==1.2.2",
    "rich==14.0.0",
    "sympy==1.13.3",
]

[project.urls]
Documentation = "https://github.com/Alphonsus411/pCobra#readme"
Source = "https://github.com/Alphonsus411/pCobra"

[project.optional-dependencies]
ml = [
    "tensorflow==2.20.0",
    "DEAP==1.3.1",
]
big-data = ["dask==0.19.0"]
mutation = ["mutpy==0.6.1"]
notebooks = [
    "papermill==2.6.0",
    "nbconvert==7.16.6",
    "ipykernel==6.29.5",
]
dev = [
    "python-dotenv==1.1.1",
    "python-lsp-server==1.13.0",
    "hypothesis==6.138.3",
    "ipykernel==6.29.5",
    "tree-sitter-languages==1.10.2",
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "pytest-timeout==2.4.0",
    "ruff==0.12.8",
    "mypy==1.17.1",
]

[tool.setuptools]
include-package-data = true
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["pcobra", "cobra", "core", "corelibs", "standard_library"]

[project.scripts]
cobra = "pcobra.cli:main"

[project.entry-points."cobra.plugins"]
# Se registrarán plugins externos aquí

[project.entry-points."cobra.transpilers"]
# Se registrarán transpiladores externos aquí

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["pcobra"]

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    "docs/frontend",
    "docs/build",
    "tests",
    "notebooks",
]

[tool.ruff.lint]
select = ["E9", "F63", "F7", "F82"]
ignore = []

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
exclude = "^(docs/build/|docs/frontend/|venv/|.venv/|tests/|build/|dist/|examples/|notebooks/)"
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true
strict_optional = true
disallow_untyped_defs = true

[tool.pyright]
include = ["src/pcobra"]
exclude = [
    "docs/build",
    "docs/frontend",
    "venv",
    ".venv",
    "dist",
    "build",
    "tests",
]
ignore = []
reportMissingImports = false
reportMissingTypeStubs = false
pythonVersion = "3.11"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true

[tool.pytest.ini_options]
markers = [
    "timeout: tiempo máximo de ejecución de una prueba",
    "slow: pruebas lentas",
    "integration: pruebas de integración",
    "fuzz: pruebas de mutación/fuzzing",
    "performance: pruebas de rendimiento",
    "windows: pruebas específicas de Windows",
    "asyncio: pruebas que utilizan bucles de eventos asíncronos",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--capture=fd",
    "--show-capture=all",
    "--durations=10",
    "--maxfail=5",
]
norecursedirs = [
    "dist",
    "build",
    ".venv",
    "venv",
    "docs/frontend",
    "docs/build",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "venv/*",
    "tests/*",
]
branch = true

[tool.coverage.report]
fail_under = 85
