name: Release

permissions:
  contents: write
  packages: write
  actions: write

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # Fijado a commit para seguridad de la cadena de suministro
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Validate changelog
        run: python scripts/check_changelog.py
      - name: Build package and upload to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
          twine check dist/*
          twine upload dist/*
      - name: Upload distributions
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: dist-${{ github.ref_name }}
          path: dist/*
      - name: Build and push Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker build -t "$DOCKERHUB_USERNAME/cobra:${{ github.ref_name }}" .
          docker push "$DOCKERHUB_USERNAME/cobra:${{ github.ref_name }}"

  build-executables:
    uses: ./.github/workflows/build-binaries.yml
    secrets: inherit

  release:
    needs: [publish-artifacts, build-executables]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          path: dist
          merge-multiple: true
      - name: Create GitHub Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/**
      - name: Notify Slack
        if: always() && secrets.SLACK_WEBHOOK_URL != ''
        uses: rtCamp/action-slack-notify@cdf0a2130cbcdfd82ba5fcac8e076370bf381b36 # v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: |
            Release ${{ github.ref_name }} ${{ job.status }}
            https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
      - name: Send release email
        if: |
          always() &&
          secrets.SMTP_SERVER != '' &&
          secrets.SMTP_PORT != '' &&
          secrets.SMTP_USERNAME != '' &&
          secrets.SMTP_PASSWORD != ''
        uses: dawidd6/action-send-mail@4226df7daafa6fc901a43789c49bf7ab309066e7 # v3
        with:
          server: ${{ secrets.SMTP_SERVER }}
          port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Release ${{ github.ref_name }}"
          to: "devs@example.com"
          from: "Cobra CI <${{ secrets.SMTP_USERNAME }}>"
          body: |
            Se ha publicado la versión ${{ github.ref_name }}.
            https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
        # Validar este flujo de correo en un entorno controlado antes de producción.

