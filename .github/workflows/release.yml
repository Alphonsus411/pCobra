name: Release

permissions:
  contents: write
  packages: write
  actions: write

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build package and upload to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
          twine check dist/*
          twine upload dist/*
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.ref_name }}
          path: dist/*
      - name: Build and push Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker build -t "$DOCKERHUB_USERNAME/cobra:${{ github.ref_name }}" .
          docker push "$DOCKERHUB_USERNAME/cobra:${{ github.ref_name }}"

  build-executables:
    needs: publish-artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        uses: ./.github/actions/install
        with:
          extra: "pyinstaller"
      - name: Build executable
        run: cobra empaquetar --output dist
      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: cobra-${{ matrix.os }}
          path: dist/*

  release:
    needs: build-executables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: dist
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/cobra*
      - name: Notify Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_MESSAGE: |
            Release ${{ github.ref_name }} ${{ job.status }}
            https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
      - name: Send release email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server: ${{ secrets.SMTP_SERVER }}
          port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Release ${{ github.ref_name }}"
          to: "devs@example.com"
          from: "Cobra CI <${{ secrets.SMTP_USERNAME }}>"
          body: |
            Se ha publicado la versión ${{ github.ref_name }}.
            https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
        # Validar este flujo de correo en un entorno controlado antes de producción.

