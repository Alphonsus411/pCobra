name: Publish Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  bump-version:
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Bump version
        id: bump
        run: |
          VERSION=$(python scripts/bump_version.py)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Commit version bump
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          git commit -am "Bump version to ${VERSION}"
          git tag -a v${VERSION} -m "v${VERSION}"
          git push origin HEAD
          git push origin --tags

  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build package
        run: python -m build
      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: CHANGELOG.md
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
      - name: Verificar etiqueta de publicaci칩n
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "La referencia ${GITHUB_REF} es v치lida"
          else
            echo "Referencia de tag no v치lida: ${GITHUB_REF}" >&2
            exit 1
          fi
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload --skip-existing dist/*
      - name: Verificar instalaci칩n desde PyPI
        run: |
          python -m venv env
          source env/bin/activate
          pip install cobra-lenguaje
          cobra --version
