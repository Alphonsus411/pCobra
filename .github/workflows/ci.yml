name: CI

permissions:
  contents: read

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ golang-go ruby-full rustc default-jdk clang llvm
      - name: Install dependencies
        uses: ./.github/actions/install
        with:
          extra: "sphinx sphinx-rtd-theme pytest-cov codecov pyright"
      - name: Seguridad de dependencias
        run: |
          pip install safety
          safety check --full-report
      - name: Scan for secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run linters
        run: make lint
      - name: Run type checks
        run: make typecheck  # Ejecuta mypy con la configuración del proyecto y pyright
      - name: Validate changelog
        run: python scripts/check_changelog.py
      - name: Run tests
        run: |
          if [ -d tests ]; then
            pytest tests src/tests --cov=src --cov-report=xml \
              --cov-report=term-missing --cov-fail-under=95
          else
            pytest src/tests --cov=src --cov-report=xml \
              --cov-report=term-missing --cov-fail-under=95
          fi
      - name: Run LLVM examples
        run: |
          PYTHONPATH=src python scripts/test_llvm_examples.py
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
      - name: Build docs
        run: sphinx-build -b html frontend/docs frontend/build/html
      - name: Check doc links
        run: sphinx-build -b linkcheck frontend/docs frontend/build/linkcheck

  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ golang-go ruby-full rustc default-jdk
      - name: Install dependencies
        uses: ./.github/actions/install
        with:
          extra: "sphinx sphinx-rtd-theme pytest-cov codecov pyright"
      - name: Compare benchmarks
        run: python scripts/benchmarks/compare_releases.py --output benchmarks_compare.json --max-regression 10
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmarks_compare
          path: benchmarks_compare.json
      - name: Publicar resumen
        run: |
          python - <<'PY'
          import json, os

          data = json.load(open('benchmarks_compare.json'))
          lines = [
              "### Resultados de benchmarks",
              "",
              "| Backend | Δ Tiempo (s) | Δ Memoria (kB) |",
              "| --- | --- | --- |",
          ]
          for d in data:
              dt = d["diff_time"]
              dm = d["diff_memory_kb"]
              dt_str = f"{dt:+.4f}" if dt is not None else "N/A"
              dm_str = f"{dm:+d}" if dm is not None else "N/A"
              lines.append(f"| {d['backend']} | {dt_str} | {dm_str} |")

          with open(os.environ["GITHUB_STEP_SUMMARY"], "a") as fh:
              fh.write("\n".join(lines))
          PY
